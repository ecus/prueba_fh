
//------------------------------------- FREEZING -------------------------------------
	public function freezingAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
		$this->dbAdapter=$this->getServiceLocator()->get('Zend\Db\Adapter');
		$tablaSuc	=	new SucursalTabla($this->dbAdapter);
		$listaSuc	=	$tablaSuc->listaSucursal();
		$pag		=	$this->getRequest()->getBaseUrl();
		$frmfree	=	new Frmfreezing('frmFreezing');
		//$frmPer->get("cmbSucursal")->setValueOptions($listaSuc);
		$var		=	array(
				"titulo"		=>	"Registro de Sucursal",
    			"frmFreezing"	=>	$frmfree,
    			"listaSuc"		=>	$listaSuc,
				"url"			=>	$pag,
				'id'			=>	$container->iduser,
					'per'		=>	$container->idper,
				'nombre'		=>	$container->nombre
			);
		$view = new ViewModel($var);
		$this->layout('layout/registro');
		return $view;
		}else{
			return $this->forward()->dispatch("Fitness\Controller\Index",
									array(
										"action"	=>	"index",
										"msje"		=>	"Debe identificarse, para tener acceso a la aplicación."
										));
		}
	}

	public function regfreeAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$request = $this->getRequest();
			$response = $this->getResponse();
			if ($request->isPost()) {
				$this->dbAdapter=$this->getServiceLocator()->get('Zend\Db\Adapter');
				$free		=	new Freezing();
				$freeTabla	=	new FreezingTabla($this->dbAdapter);
				$frm 		= 	$request->getPost();
				$free->setFechaReg($frm['dtpFechaReg']);
				$free->setCantDias($frm['txtDias']);
				$free->setComentario($frm['txtDetalle']);
				$free->setIdInscripcion($frm['txtIdInsc']);
				$free->setIdCliente($frm['txtIdCli']);
				$free->setIdPersonal($frm['txtIdPer']);
				$msje =	$freeTabla->insertarFreezing($free);
				if (!$msje)
					$response->setContent(\Zend\Json\Json::encode(array('response' => false)));
				else {
					$response->setContent(\Zend\Json\Json::encode(array('response' => $msje)));
				}
			}
			return $response;
		}else{
			return 0;
		}
	}
	public function listaclienteAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$request 			= 	$this->getRequest();
			$response 			=	$this->getResponse();
			$this->dbAdapter	=	$this->getServiceLocator()->get('Zend\Db\Adapter');
			$tablafree			=	new FreezingTabla($this->dbAdapter);
			$frm=$request->getpost();
			$dni=$frm['txtDni'];

			$listafree 			=	$tablafree->verCliente($dni);
			$listafree			=	\Zend\Json\Json::encode($listafree);
			$response->setContent(\Zend\Json\Json::prettyPrint($listafree,array("indent" => " ")));
			return $response;
		}else{
			return 0;
		}
	}

//------------------------------------- ASISTENCIA -----------------------------------
	public function asistenciaAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$this->dbAdapter=$this->getServiceLocator()->get('Zend\Db\Adapter');
			$tablaSuc	=	new SucursalTabla($this->dbAdapter);
			$listaSuc	=	$tablaSuc->listaSucursal();
			$pag		=	$this->getRequest()->getBaseUrl();
			$frmfree	=	new Frmasistencia('frmAsistencia');
				//$frmPer->get("cmbSucursal")->setValueOptions($listaSuc);
				$var		=	array(
					"titulo"		=>	"Registro de Asistencia",
		   			"frmAsistencia"	=>	$frmfree,
		   			"listaSuc"		=>	$listaSuc,
					"url"			=>	$pag,
					'id'			=>	$container->iduser,
					'per'		=>	$container->idper,
					'nombre'		=>	$container->nombre
				);
			$view = new ViewModel($var);
			$this->layout('layout/registro');
			return $view;
		}else{
			return $this->forward()->dispatch("Fitness\Controller\Index",
									array(
										"action"	=>	"index",
										"msje"		=>	"Debe identificarse, para tener acceso a la aplicación."
										));
		}
	}

	public function activolistaclienteAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$request 			= 	$this->getRequest();
			$response 			=	$this->getResponse();
			$this->dbAdapter	=	$this->getServiceLocator()->get('Zend\Db\Adapter');
			$tablaAsis			=	new AsistenciaTabla($this->dbAdapter);
			$listaAsis 			=	$tablaAsis->listaClienteActivo();
			$listaAsis			=	\Zend\Json\Json::encode($listaAsis);
			$response->setContent(\Zend\Json\Json::prettyPrint($listaAsis,array("indent" => " ")));
			return $response;
		}else{
			return 0;
		}
	}
	public function verserviciosAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$request 			= 	$this->getRequest();
			$response 			=	$this->getResponse();
			$this->dbAdapter	=	$this->getServiceLocator()->get('Zend\Db\Adapter');
			$tablaAsis			=	new AsistenciaTabla($this->dbAdapter);
			$frm=$request->getpost();
			$id=$frm['id'];

			$listaAsis 			=	$tablaAsis->verServicios($id);
			$listaAsis			=	\Zend\Json\Json::encode($listaAsis);
			$response->setContent(\Zend\Json\Json::prettyPrint($listaAsis,array("indent" => " ")));
			return $response;
		}else{
			return 0;
		}
	}
	public function regasisAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$request = $this->getRequest();
			$response = $this->getResponse();
			if ($request->isPost()) {
				$this->dbAdapter=$this->getServiceLocator()->get('Zend\Db\Adapter');
				$asis		=	new Asistencia();
				$asisTabla	=	new AsistenciaTabla($this->dbAdapter);
				$frm 		= 	$request->getPost();
				$asis->setFechaReg($frm['dtpFechaReg']);
				$asis->setFechaIng($frm['dtpFechaIng']);
				$asis->setidIns($frm['txtidIns']);
				//$asis->setidHS($frm['txtidHS']);
				$asis->setidCli($frm['txtidCli']);
				$asis->setidPer($frm['txtidPer']);
				$asis->setidSuc($frm['txtidSuc']);
	            $msje		=	$asisTabla->insertarAsistencia($asis);
	            if (!$msje)
	                $response->setContent(\Zend\Json\Json::encode(array('response' => false)));
	            else {
	                $response->setContent(\Zend\Json\Json::encode(array('response' => $msje)));
            	}
     		}
			return $response;
		}else{
			return 0;
		}
	}

//------------------------------------- PAGO -----------------------------------------
	public function pagoAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$this->dbAdapter=$this->getServiceLocator()->get('Zend\Db\Adapter');
			$tablaSuc	=	new SucursalTabla($this->dbAdapter);
			$listaSuc	=	$tablaSuc->listaSucursal();
			$pag		=	$this->getRequest()->getBaseUrl();
			$frmpago	=	new Frmpago('frmPago');
			//$frmPer->get("cmbSucursal")->setValueOptions($listaSuc);
			$var		=	array(
				"titulo"		=>	"Registro de Pagos",
    			"frmPago"		=>	$frmpago,
    			"listaSuc"		=>	$listaSuc,
				"url"			=>	$pag,
				'id'			=>	$container->iduser,
					'per'		=>	$container->idper,
				'nombre'		=>	$container->nombre
				);
			$view = new ViewModel($var);
			$this->layout('layout/registro');
			return $view;
		}else{
			return $this->forward()->dispatch("Fitness\Controller\Index",
									array(
										"action"	=>	"index",
										"msje"		=>	"Debe identificarse, para tener acceso a la aplicación."
										));
		}
	}

	public function buscaclienteAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$request 			= 	$this->getRequest();
			$response 			=	$this->getResponse();
			$this->dbAdapter	=	$this->getServiceLocator()->get('Zend\Db\Adapter');
			$tablapago			=	new PagoTabla($this->dbAdapter);
			$frm=$request->getpost();
			$dni=$frm['txtDni'];

			$listapago 			=	$tablapago->verCliente($dni);
			$listapago			=	\Zend\Json\Json::encode($listapago);
			$response->setContent(\Zend\Json\Json::prettyPrint($listapago,array("indent" => " ")));
			return $response;
		}else{
			return 0;
		}
	}
	public function regpagoAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$request = $this->getRequest();
			$response = $this->getResponse();
			if ($request->isPost()) {
				$this->dbAdapter=$this->getServiceLocator()->get('Zend\Db\Adapter');
				$pago		=	new Pago();
				$pagoTabla	=	new PagoTabla($this->dbAdapter);
				$frm 		= 	$request->getPost();
				$pago->setFechaRegPago($frm['dtpFechaReg']);
				$pago->setFechaPago($frm['dtpFechaPago']);
				$pago->setTotal($frm['txtPago']);
				$pago->setMoneda($frm['cmbMoneda']);
				$pago->setFormaPago($frm['cmbPago']);
				$pago->setConPago($frm['cmbConcepto']);
				$pago->setEstado($frm['cmbEstado']);
				$pago->setidServicio($frm['txtIdSer']);
				$pago->setidCuenta($frm['txtIdCta']);
				$pago->setidPer($frm['txtIdPer']);
				$pago->setidSucursal($frm['txtIdSuc']);
				$pago->setidCliente($frm['txtIdCli']);
	            $msje		=	$pagoTabla->insertarPago($pago);
	            if (!$msje)
	                $response->setContent(\Zend\Json\Json::encode(array('response' => false)));
	            else {
	                $response->setContent(\Zend\Json\Json::encode(array('response' => $msje)));
	            }
	        }
			return $response;
		}else{
			return 0;
		}
	}
//------------------------------------- EMPRESA --------------------------------------
	public function empresaAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$frmEmp		=	new FrmEmpresa('frmEmpresa');
			$var		=	array(
				"titulo"		=>	"Registro de Empresa",
				"frmEmpresa"	=>	$frmEmp,
				'id'			=>	$container->iduser,
					'per'		=>	$container->idper,
				'nombre'		=>	$container->nombre
			);
			$view = new ViewModel($var);
			$this->layout('layout/registro');
			return $view;
		}else{
			return $this->forward()->dispatch("Fitness\Controller\Index",
									array(
										"action"	=>	"index",
										"msje"		=>	"Debe identificarse, para tener acceso a la aplicación."
										));
		}
	}
	public function regempresaAction()
	{
		$container = new Container('personal');
		if (isset($container->iduser)) {
			$request = $this->getRequest();
			$response = $this->getResponse();
			if ($request->isPost()) {
				$this->dbAdapter=$this->getServiceLocator()->get('Zend\Db\Adapter');
				$emp		=	new Empresa();
				$empTabla	=	new EmpresaTabla($this->dbAdapter);
				$frm 		= 	$request->getPost();
				$emp->setNombre_Em($frm['txtNombre']);
				$msje		=	$empTabla->insertarEmpresa($emp);
				if (!$msje)
					$response->setContent(\Zend\Json\Json::encode(array('response' => false)));
	            else {
					$response->setContent(\Zend\Json\Json::encode(array('response' => $msje)));
	            }
        	}
			return $response;
		}else{
			return 0;
		}
	}